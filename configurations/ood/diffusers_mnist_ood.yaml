base_model:
  config_dir: checkpoints-hg9x5r0n/diffusion_mnist_tweeting_1ou4vbuo_final/run_config.json
  checkpoint_dir: checkpoints-hg9x5r0n/diffusion_mnist_tweeting_1ou4vbuo_final/checkpoints/de_score-based-VP-diffusion_latest.pt
data:
  # specify the datasets and dataloader configurations for the in and out of distribution data.
  in_distribution:
    dataloader_args:
      make_valid_loader: false
      dataset: mnist
      train_batch_size: 8
      valid_batch_size: 8
      test_batch_size: 8
      additional_dataset_args:
        resize_image: [32, 32]
    pick_loader: train
  out_of_distribution:
    dataloader_args:
      make_valid_loader: false
      dataset: fashion-mnist
      train_batch_size: 8
      valid_batch_size: 8
      test_batch_size: 8
      additional_dataset_args:
        resize_image: [32, 32]
    pick_loader: test
ood:
  # bypass the entire visualization process since there is no need to plot the histograms that take time!
  bypass_visualization: False
  histogram_limit: 64
  samples_visualization: 1
  sampling_kwargs:
    steps: 1000

  # for reproducibility
  seed: 50

  log_prob_kwargs:
    steps: 30
    verbose: 0
    eps: 0.1
    trace_calculation_kwargs:
      method: hutchinson_rademacher
      sample_count: 25
  # The OOD detection method in use
  method: null

  
logger:
  project: ood-detection-sanity-checks
  entity: platypus-dgm
  name: visualize_likelihoods_mnist_vs_fmnist
