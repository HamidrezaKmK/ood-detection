base_model:
  config_dir: checkpoints-hg9x5r0n/diffusion_mnist_tweeting_1ou4vbuo_final/run_config.json
  checkpoint_dir: checkpoints-hg9x5r0n/diffusion_mnist_tweeting_1ou4vbuo_final/checkpoints/de_score-based-VP-diffusion_latest.pt
data:
  # specify the datasets and dataloader configurations for the in and out of distribution data.
  in_distribution:
    dataloader_args:
      make_valid_loader: false
      dataset: mnist
      train_batch_size: 8
      valid_batch_size: 8
      test_batch_size: 8
      additional_dataset_args:
        resize_image: [32, 32]
    pick_loader: train
  out_of_distribution:
    dataloader_args:
      make_valid_loader: false
      dataset: mnist
      train_batch_size: 8
      valid_batch_size: 8
      test_batch_size: 8
      additional_dataset_args:
        resize_image: [32, 32]
    pick_loader: test
ood:
  seed: 50
  bypass_visualization: True
  use_dataloader: True
  pick_count: 8

  # The OOD detection method in use
  method: ood.methods.intrinsic_dimension.diffusion_method.DiffusionIntrinsicDimensionOODDetection
  method_args:
    intrinsic_dimension_calculator_args:
      num_samples: 500
      eps: 0.01
      max_batch_size: 8
      use_drift: True
    log_prob_kwargs:
      steps: 25
      verbose: 0
      trace_calculation_kwargs:
        method: hutchinson_rademacher
        sample_count: 10
    # for logging args
    verbose: 1
    
    # Hyper-parameters relating to the scale parameter that is being computed
    evaluate_r: -20
    adaptive_measurement: True
    given_mean_lid: 224 # This is different
    adaptive_train_data_buffer_size: 8  
    bin_search_iteration_count: 10
    checkpointing_buffer: 5
  
logger:
  project: ood-detection-sanity-checks
  entity: platypus-dgm
  name: diffusion_likelihood_vs_LID_mnist_vs_mnist
