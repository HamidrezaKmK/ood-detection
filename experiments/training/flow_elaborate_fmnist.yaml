# Settings from the legacy config
legacy:
  dataset: fashion-mnist
  cfg:
    max_epochs: 100
trainer:
  sample_freq: 5 # logs the samples after every two epochs
  writer:
    type: wandb
    entity: dgm-l6
    project: training-dgms
# Settings from the new configurations
model:
  class_path: model_zoo.density_estimator.flow.NormalizingFlow
  init_args:
    # Data args
    flatten: False
    data_shape: [1, 28, 28]
    denoising_sigma: null
    dequantize: True
    scale_data: False
    whitening_transform: False
    logit_transform: False
    clamp_samples: False
    base_distribution:
      class_path: nflows.distributions.StandardNormal
      init_args:
        shape: [784]
    transform:
    ######################################################################### 
    ###### First level
    - class_path: nflows.transforms.reshape.SqueezeTransform
      init_args:
        factor: 2 # turns the image into [4, 14, 14]
    - repeat_n: 3
      content:
      - class_path: nflows.transforms.normalization.ActNorm
        init_args:
          features: 4 # Apply activation normalization to all the channels
      - class_path: nflows.transforms.conv.OneByOneConvolution
        init_args: 
          num_channels: 4
      - class_path: model_zoo.density_estimator.flow.RQCouplingTransform
        init_args: 
          net:
            class_path: nflows.nn.nets.resnet.ConvResidualNet
            init_args:
              hidden_channels: 64
              num_blocks: 2
              activation: torch.nn.functional.relu
              dropout_probability: 0.2
              use_batch_norm: False
          mask:
            dim: 4
            flip: True
          tails: linear
          num_bins: 2
          tail_bound: 1.0
      - class_path: nflows.transforms.normalization.ActNorm
        init_args:
          features: 4 # Apply activation normalization to all the channels
      - class_path: nflows.transforms.conv.OneByOneConvolution
        init_args: 
          num_channels: 4
      - class_path: model_zoo.density_estimator.flow.RQCouplingTransform
        init_args: 
          net:
            class_path: nflows.nn.nets.resnet.ConvResidualNet
            init_args:
              hidden_channels: 64
              num_blocks: 2
              activation: torch.nn.functional.relu
              dropout_probability: 0.2
              use_batch_norm: False
          mask:
            dim: 4
            flip: False
          tails: linear
          num_bins: 2
          tail_bound: 1.0
    - class_path: nflows.transforms.conv.OneByOneConvolution
      init_args: 
        num_channels: 4
      multiscale:
        transform_output_shape: [4, 14, 14]
    ###########################################################################
    ##### Second Level
    # squeeze
    - class_path: nflows.transforms.reshape.SqueezeTransform
      init_args:
        factor: 2 # turns the image into [8, 7, 7]
    - repeat_n: 3
      content:
      - class_path: nflows.transforms.normalization.ActNorm
        init_args:
          features: 8 # Apply activation normalization to all the channels
      - class_path: nflows.transforms.conv.OneByOneConvolution
        init_args: 
          num_channels: 8
      - class_path: model_zoo.density_estimator.flow.RQCouplingTransform
        init_args: 
          net:
            class_path: nflows.nn.nets.resnet.ConvResidualNet
            init_args:
              hidden_channels: 64
              num_blocks: 2
              activation: torch.nn.functional.relu
              dropout_probability: 0.2
              use_batch_norm: False
          mask:
            dim: 8
            flip: True
          tails: linear
          num_bins: 2
          tail_bound: 1.0
      - class_path: nflows.transforms.normalization.ActNorm
        init_args:
          features: 8 # Apply activation normalization to all the channels
      - class_path: nflows.transforms.conv.OneByOneConvolution
        init_args: 
          num_channels: 8
      - class_path: model_zoo.density_estimator.flow.RQCouplingTransform
        init_args: 
          net:
            class_path: nflows.nn.nets.resnet.ConvResidualNet
            init_args:
              hidden_channels: 64
              num_blocks: 2
              activation: torch.nn.functional.relu
              dropout_probability: 0.2
              use_batch_norm: False
          mask:
            dim: 8
            flip: False
          tails: linear
          num_bins: 2
          tail_bound: 1.0
    - class_path: nflows.transforms.conv.OneByOneConvolution
      init_args: 
        num_channels: 8
      multiscale:
        transform_output_shape: [8, 7, 7]
    ###########################################################################
    ##### Third Level
    # squeeze
    - class_path: nflows.transforms.reshape.SqueezeTransform
      init_args:
        factor: 7 # turns the image into [196, 1, 1]
    - repeat_n: 2
      content:
      - class_path: nflows.transforms.normalization.ActNorm
        init_args:
          features: 196 # Apply activation normalization to all the channels
      - class_path: model_zoo.density_estimator.flow.RQCouplingTransform
        init_args: 
          net:
            class_path: nflows.nn.nets.resnet.ConvResidualNet
            init_args:
              hidden_channels: 1024
              num_blocks: 2
              activation: torch.nn.functional.relu
              dropout_probability: 0.2
              use_batch_norm: False
          mask:
            dim: 196
            flip: True
          tails: linear
          num_bins: 2
          tail_bound: 1.0
      - class_path: nflows.transforms.normalization.ActNorm
        init_args:
          features: 196 # Apply activation normalization to all the channels
      - class_path: model_zoo.density_estimator.flow.RQCouplingTransform
        init_args: 
          net:
            class_path: nflows.nn.nets.resnet.ConvResidualNet
            init_args:
              hidden_channels: 1024
              num_blocks: 2
              activation: torch.nn.functional.relu
              dropout_probability: 0.2
              use_batch_norm: False
          mask:
            dim: 196
            flip: False
          tails: linear
          num_bins: 2
          tail_bound: 1.0
    - class_path: nflows.transforms.conv.OneByOneConvolution
      init_args: 
        num_channels: 196
      multiscale:
        transform_output_shape: [196, 1, 1]
    